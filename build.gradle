/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'checkstyle'
    id 'jacoco'
}
group = 'hexlet.code'
version = '1.0-SNAPSHOT'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    implementation group: 'io.javalin', name: 'javalin', version: '4.6.4'
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.31'
}

application {
    // Define the main class for the application.
    mainClass = 'hexlet.code.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
    jacoco {
        enabled = true
        destinationFile = layout.buildDirectory.file("jacoco/${name}.exec").get().asFile
        includes = []
        excludes = []
        excludeClassLoaders = []
        includeNoLocationClasses = false
        sessionId = "<auto-generated value>"
        dumpOnExit = true
        classDumpDir = null
        output = JacocoTaskExtension.Output.FILE
        address = "localhost"
        port = 6300
        jmx = false
    }
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}
jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}
//jacoco {
//    toolVersion = "0.8.8"
//    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
//}
compileJava {
    options.release = 17
}
task stage(dependsOn: ['clean', 'installDist'])
installDist.mustRunAfter clean

//task copyToLib(type: Copy) {
//    into "$buildDir/libs"
//    from(configurations.compile)
//}
//
//stage.dependsOn(copyToLib)

jar {
    manifest {
        attributes(
                'Main-Class': 'hexlet.code.App'
        )
    }
//    from { (configurations.runtime).collect { it.isDirectory() ? it : zopTree(it) } }
}